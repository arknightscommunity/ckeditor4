(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}();var e,r=function(){function t(){}return t.prototype.tagAliases=function(){return[]},t.prototype.match=function(t){if(t===this.tagName())return!0;for(var e=0,r=this.tagAliases();e<r.length;e++)if(t===r[e])return!0;return!1},t.prototype.isSelfClose=function(){return!1},t.prototype.useCustomParser=function(t){return!1},t.prototype.allowParents=function(t){return[]},t.prototype.parseStackToHtml=function(t,e,r,o,n,i){return""},t.prototype.splitArgs=function(t){return t.split(";")},t.prototype.combineAttributes=function(e){var r="";for(var o in e)if(e.hasOwnProperty(o)){var n=e[o];n&&(r+=o+'="'+t.filterXSS(n)+'" ')}return r&&(r=" "+r),r},t.prototype.checkSize=function(t,e){return void 0===e&&(e="px"),t?t.match(/^\d{1,4}(\.\d{1,4})?(px|%)$/g)?t:t.match(/^\d{1,4}(\.\d{1,4})?$/g)?""+parseFloat(t)+e:"":""},t.prototype.checkWhitelistValue=function(t,e){for(var r=0,o=e;r<o.length;r++)if(t===o[r])return t;return""},t.prototype.checkColor=function(t){return t?(t=t.replace(/ +/g,"")).match(/^((#[0-9a-fA-F]{3})|(#[0-9a-fA-F]{6})|([a-zA-Z]{1,20}))$/g)||t.match(/^(rgb\(\d{1,3}(,\d{1,3}){2}\))|(rgba\(\d{1,3}(,\d{1,3}){2},(0\.)?\d{1,2}\))$/g)?t:t.match(/^[0-9a-fA-F]{6}$/g)?"#"+t:"":""},t.prototype.checkAlign=function(t){return!t||"left"!==t&&"right"!==t&&"center"!==t&&"justify"!==t&&"top"!==t&&"bottom"!==t&&"middle"!==t&&"baseline"!==t?"":t},t.prototype.combineStyles=function(t){var e="";for(var r in t)if(t.hasOwnProperty(r)){var o=t[r];o&&(e+=r+":"+o+";")}return e},t.prototype.combineArgs=function(t){for(var e=!1,r="",o=t.length-1;o>=0;o--){var n=t[o];n&&(r=n+r,e=!0),(e||n)&&o>0&&(r=";"+r)}return r&&(r="="+r),r},t.unfilteredXSS=function(t){return"string"!=typeof t?String(t):t.replace(/\u200B/g,"").replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#39;/g,"'").replace(/&nbsp;/g," ")},t.filterXSS=function(t){return"string"!=typeof t?String(t):t.replace(/\u200B/g,"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/ /g,"&nbsp;")},t}(),o=(e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,r)},function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}),n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.prototype.tagName=function(){return"compatible"},e.prototype.match=function(t){return!1},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r||!1},e.prototype.handleStyle=function(t,e,r,o,n,i){var a,c,s,u;if(void 0===i&&(i=!1),a="string"==typeof n?document.createElement("span"):n,t.classList.contains("quote")){var l=document.createElement("blockquote");l.setAttribute("data-tag","quote"),c?(c.appendChild(l),c=l):(c=l,a.appendChild(c))}if(t.style.textAlign)switch(t.style.textAlign){case"left":case"right":case"center":var p=document.createElement("div");p.setAttribute("data-tag","align"),p.style.textAlign=t.style.textAlign,c?(c.appendChild(p),c=p):(c=p,a.appendChild(c))}if("bold"===t.style.fontWeight){var f=document.createElement("b");c?(c.appendChild(f),c=f):(c=f,a.appendChild(c))}if(t.style.color&&(s=this.checkColor(t.style.color))&&((u=document.createElement("span")).setAttribute("data-color",s),u.setAttribute("data-tag","color"),u.style.color=s,c?(c.appendChild(u),c=u):(c=u,a.appendChild(c))),(t.style.background||t.style.backgroundColor)&&(s=this.checkColor(t.style.backgroundColor?t.style.backgroundColor:t.style.background))&&((u=document.createElement("span")).setAttribute("data-color",s),u.setAttribute("data-tag","bgcolor"),u.style.backgroundColor=s,c?(c.appendChild(u),c=u):(c=u,a.appendChild(c))),c){for(var d=0,y=Array.from(t.childNodes);d<y.length;d++){var h=y[d];c.appendChild(h)}return i?"\n"+e(a,r,o)+"\n":e(a,r,o)}return!1},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t;switch(n.tagName.toLowerCase()){case"h4":case"span":return this.handleStyle(n,e,r,o,"span");case"p":case"div":return this.handleStyle(n,e,r,o,"div",!0);default:return!1}},e}(r),i=function(){function e(){this.TAG_HANDLER_LIST=[],this.compatible=new n}return e.prototype.transformAsIs=function(t,e,r){return"["+(e?t+"="+e:t)+"]"+r+"[/"+t+"]"},e.prototype.transformTag=function(t,e,r,o){null==e&&(e=""),t=t.substring(1);var n=this.getHandler(t);if(n){var i=n.encodeToHtml(t,r,e,o);if("string"==typeof i)return i}return this.transformAsIs(t,r,e)},e.prototype.registerTagHandler=function(t){this.TAG_HANDLER_LIST.push(t)},e.prototype.getHandler=function(t){for(var e=0,r=this.TAG_HANDLER_LIST;e<r.length;e++){var o=r[e];if(o.match(t))return o}return null},e.prototype.bbcode2html=function(t,o){void 0===o&&(o=!1),t=t.replace(/\u200B/g,"").replace(/\xC2\xA0/g," ");for(var n=[],i={},a=e.STATE_NORMAL,c="",s=0,u=0;u<t.length;u++){var l=t[u];switch(l){case"[":a===e.STATE_NORMAL&&u<t.length?(c.length>0&&n.push({type:e.TYPE_TEXT,value:r.filterXSS(c)}),c="[","/"===t[u+1]?(a=e.STATE_BBCODE_CLOSE_START,c+="/",u++):a=e.STATE_BBCODE_OPEN_START):a===e.STATE_BBCODE_OPEN_START||a===e.STATE_BBCODE_CLOSE_START?c.length>0&&(n.push({type:e.TYPE_TEXT,value:r.filterXSS(c)}),c="["):c+=l;break;case"]":if(a===e.STATE_BBCODE_OPEN_START){var p="",f="",d=c.indexOf("="),y=-1;if(d>0){var h=c.indexOf(" ");h<0||h>d?y=d:h>0&&h<d&&(y=h)}y>0?(f=c.substring(y+1),p=c.substring(0,y)):p=c;var g=p.substring(1),m=!1;if(w=this.getHandler(g)){var b=w.allowParents(g);if(b.length>0){for(var _=0,v=b;_<v.length;_++)if(i[v[_]]){m=!0;break}}else m=!0}m?(w.isSelfClose()?n.push({type:e.TYPE_TEXT,value:this.transformTag(p,"",f,o)}):(n.push({type:e.TYPE_BBCODE_OPEN,value:p,arg:r.filterXSS(f),customParser:w.useCustomParser(g),contentOffset:u+1}),w.useCustomParser(g)&&s++,i[g]=i[g]?i[g]+1:1),c=""):c+="]",a=e.STATE_NORMAL}else if(a===e.STATE_BBCODE_CLOSE_START){var w;if(p=c.substring(2),(w=this.getHandler(p))&&!w.isSelfClose()){if(s>0&&!w.useCustomParser(p)){n.push({type:e.TYPE_BBCODE_CLOSE,value:p}),c="",a=e.STATE_NORMAL;break}var O="",T=!1,A=[];t:for(;;){var E=n.pop();if(!E)break;switch(E.type){case e.TYPE_TEXT:A.push(E),O=E.value+O;break;case e.TYPE_BBCODE_OPEN:A.push(E);var S=E.value.substring(1);if(i[S]&&(i[S]=Math.max(i[S]-1,0)),p===S){E.customParser?(n.push({type:e.TYPE_TEXT,value:w.parseStackToHtml(A,t,E.contentOffset,u-c.length,this,o)}),s--):s>0?(n.push(E),n.push({type:e.TYPE_TEXT,value:O}),n.push({type:e.TYPE_BBCODE_CLOSE,value:p})):n.push({type:e.TYPE_TEXT,value:this.transformTag(E.value,O,E.arg,o)}),A=[],O="",T=!0;break t}O=this.transformTag(E.value,O,E.arg,o);break;case e.TYPE_BBCODE_CLOSE:A.push(E)}}T||(O+=c+"]"),O.length>0&&n.push({type:e.TYPE_TEXT,value:O}),c=""}else c+="]";a=e.STATE_NORMAL}else c+=l;break;case"\r":break;default:c+=l}}for(var C="",N=void 0;N=n.pop();)N.type===e.TYPE_BBCODE_OPEN?(c.length>0&&(C+=c,c=""),C=this.transformTag(N.value,C,N.arg,o)):N.type===e.TYPE_TEXT&&(C=N.value+C);return c.length>0&&(C+=r.filterXSS(c)),C.replace(/\n/g,"<br/>")},e.prototype.html2bbcode=function(e,r){for(var o="",n=0,i=Array.from((new DOMParser).parseFromString(e.replace(/\u200B/g,""),"text/html").getElementsByTagName("body")[0].childNodes);n<i.length;n++){var a=i[n],c=JSON.parse(JSON.stringify(t.g.BBCODE.defaultStyle));o+=this.resolveNode(a,r,c)}return o},e.prototype.resolveNode=function(t,e,r){var o="";Array.isArray(t)||(t=t instanceof NodeList||t instanceof HTMLCollection?Array.from(t):[t]);for(var n=0,i=t;n<i.length;n++){var a=i[n];switch(a.nodeType){case a.ELEMENT_NODE:var c=a;if("1"===c.getAttribute("data-cke-temp")||c.classList.contains("cke_widget_partial_mask"))break;if("br"===c.tagName.toLowerCase()){o+="\n";break}var s=c.getAttribute("data-tag");s||(s=c.tagName.toLowerCase());var u=this.getHandler(s);u||(u=this.compatible);var l=JSON.parse(JSON.stringify(r));o+=u.decodeFromHtml(c,this.resolveNode.bind(this),e,l)||this.resolveNode(Array.from(a.childNodes),e,l);break;case a.TEXT_NODE:o+=a.textContent.replace(/\r+/g,"")}}return o},e.STATE_NORMAL=0,e.STATE_BBCODE_OPEN_START=1,e.STATE_BBCODE_CLOSE_START=2,e.TYPE_TEXT=0,e.TYPE_BBCODE_OPEN=1,e.TYPE_BBCODE_CLOSE=2,e}(),a=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.tagName=function(){return"b"},e.prototype.tagAliases=function(){return["strong"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<"+this.tagName()+">"+r+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[b]"+e(t.childNodes,r,o)+"[/b]"},e}(r),s=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.tagName=function(){return"i"},e.prototype.tagAliases=function(){return["em"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<"+this.tagName()+">"+r+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[i]"+e(t.childNodes,r,o)+"[/i]"},e}(r),l=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return l(e,t),e.prototype.tagName=function(){return"color"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?(e=this.checkColor(e))?'<span data-color="'+e+'" data-tag="color" style="color: '+e+'">'+r+"</span>":r:""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getAttribute("data-color");return o.color===n?e(t.childNodes,r,o):(o.color=n,"[color="+n+"]"+e(t.childNodes,r,o)+"[/color]")},e}(r),f=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),d=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.sizeMap=[0,"12px","13px","16px","18px","24px","32px","48px"],e}return f(e,t),e.prototype.tagName=function(){return"size"},e.prototype.encodeToHtml=function(t,e,r,o){if(void 0===o&&(o=!1),!r)return"";if(!e)return r;var n="",i="";if(e.match(/^[1-7]$/g))n=this.sizeMap[parseInt(e)],i=e;else{if(!e.match(/^\d+(\.\d+)?px$/g))return r;n=parseFloat(e),(isNaN(n)||n<10||n>50)&&(n=13),i=n=String(n)+"px"}return'<span data-size="'+i+'" data-tag="size" style="font-size: '+n+'">'+r+"</span>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getAttribute("data-size");return o.size===n?e(t.childNodes,r,o):(o.size=n,"[size="+n+"]"+e(t.childNodes,r,o)+"[/size]")},e}(r),y=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),h=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return y(e,t),e.prototype.tagName=function(){return"mask"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?o?'<div data-tag="mask" class="mask" title="黑幕内容">'+r+"</div>":'<div class="mask"><span class="heimu" title="你知道的太多了">'+r+"</span></div>":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[mask]"+e(t.childNodes,r,o)+"[/mask]"},e}(r),g=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return g(e,t),e.prototype.tagName=function(){return"collapse"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),e&&0===e.indexOf("title=")&&(e=e.substring(6)),e||(e="点击展开"),o?'<div data-tag="collapse" class="collapse"><span>折叠标题：</span><div class="collapse-title">'+e+'</div><span>折叠内容：</span><div class="collapse-content">'+r+"</div></div>":'<div data-tag="collapse"><details><summary><b class="collapse-title">'+e+'</b></summary><div class="collapse-content">'+r+"</div></details></div>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getElementsByClassName("collapse-title"),i=n.length>0?n[0].textContent:"点击展开",a=t.getElementsByClassName("collapse-content");return"[collapse="+i+"]"+(a.length>0?e(a[0],r,o):"")+"[/collapse]"},e}(r),b=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),_=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return b(e,t),e.prototype.tagName=function(){return"dice"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?!!r.match(/^((\d{1,7})|(\d{0,7}d\d{1,7}))([+\-]((\d{1,7})|(\d{0,7}d\d{1,7})))*$/)&&(o?'<div data-tag="dice" class="dice"><span><b>骰子ROLL点表达式：</b></span><div class="dice-expression">'+r+"</div></div>":'<div class="dice">假装有骰娘：'+r+"="+Math.round(200*Math.random())+"</div>"):""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getElementsByClassName("dice-expression"),i=n.length>0?n[0].textContent.replace(/\u200B/g,""):"";return!!i&&"[dice]"+i+"[/dice]"},e}(r),v=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return v(e,t),e.prototype.tagName=function(){return"u"},e.prototype.tagAliases=function(){return[]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<"+this.tagName()+">"+r+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[u]"+e(t.childNodes,r,o)+"[/u]"},e}(r),O=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),T=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return O(e,t),e.prototype.tagName=function(){return"del"},e.prototype.tagAliases=function(){return["s"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<s>"+r+"</s>":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[del]"+e(t.childNodes,r,o)+"[/del]"},e}(r),A=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),E=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return A(e,t),e.prototype.tagName=function(){return"img"},e.prototype.tagAliases=function(){return[]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){void 0===o&&(o=!1);var n=this.splitArgs(e),i=n[0]||"#",a=n.length>1?this.checkSize(n[1]):"",c=n.length>2?this.checkSize(n[2]):"",s=n.length>3?this.checkWhitelistValue(n[3],["left","right"]):"",u=this.combineAttributes({src:i,style:this.combineStyles({width:a,height:c,float:s})});return!!u&&"<img"+u+"/>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t,i=t.getAttribute("src"),a=this.checkSize(n.style.width),c=this.checkSize(n.style.height),s=this.checkWhitelistValue(n.style.float,["left","right"]),u=this.combineArgs([i,a,c,s]);return!!u&&"[img"+u+"]"},e}(r),S=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),C=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return S(e,t),e.prototype.tagName=function(){return"hr"},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),"<hr/>"},e.prototype.decodeFromHtml=function(t,e,r,o){return"[hr]"},e}(r),N=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),x=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return N(e,t),e.prototype.tagName=function(){return"url"},e.prototype.tagAliases=function(){return["a"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?(e?e.match(/^((https|http):\/\/)[^\s]+$/)||(e="http://"+e):e="#",'<a href="'+e+'" data-tag="url">'+r+"</a>"):""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=e(t.childNodes,r,o);return!!n&&"[url="+t.getAttribute("href")+"]"+n+"[/url]"},e}(r),P=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),k=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return P(e,t),e.prototype.tagName=function(){return"quote"},e.prototype.tagAliases=function(){return["blockquote"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?'<blockquote data-tag="quote"><p>'+r+"</p></blockquote>":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[quote]"+e(t.childNodes,r,o)+"[/quote]"},e}(r),H=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),j=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return H(e,t),e.prototype.tagName=function(){return"h1"},e.prototype.tagAliases=function(){return["h2","h3"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r&&0!==r.replace(/ +/g,"").length?"<"+(t=t.toLowerCase())+">"+r+"</"+t+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.tagName.toLowerCase();return"["+n+"]"+e(t.childNodes,r,o)+"[/"+n+"]"},e}(r),B=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),L=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.tagName=function(){return"list"},e.prototype.tagAliases=function(){return["ul","ol","li","*"]},e.prototype.allowParents=function(t){return"*"===t?["list"]:[]},e.prototype.useCustomParser=function(t){return"list"===t},e.prototype.parseStackToHtml=function(t,e,r,o,n,a){for(var c="",s="",u=[],l=0;l<t.length;l++){var p=t[l];switch(p.type){case i.TYPE_TEXT:s=p.value+s;break;case i.TYPE_BBCODE_OPEN:switch(p.value.substring(1)){case"list":var f=p.arg?"ol":"ul";s.trim()&&(s.endsWith("\n")&&(s+="&#8203;"),c="<li>"+s+"</li>"+c),c="<"+f+">"+c+"</"+f+">",s="";break;case"*":s.endsWith("\n")&&(s+="&#8203;"),c="<li>"+s+"</li>"+c,s="";break;default:s=n.transformTag(p.value,s,p.arg,a)+u.pop()}break;case i.TYPE_BBCODE_CLOSE:u.push(s),s=""}}return c},e.prototype.encodeToHtml=function(t,e,r,o){if(void 0===o&&(o=!1),!r)return"";var n="";switch(t){case"list":n=e?"ol":"ul";break;case"*":n="li";break;default:return r}return"<"+n+">"+r+"</"+n+">"},e.prototype.decodeFromHtml=function(t,e,r,o){switch(t.tagName.toLowerCase()){case"ul":return"[list]"+e(t.childNodes,r,o)+"[/list]";case"ol":return"[list=1]"+e(t.childNodes,r,o)+"[/list]";case"li":return"[*]"+e(t.childNodes,r,o);default:return!1}},e}(r),M=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),D=function(t){function e(){var r=t.call(this)||this;return e.typeMap.gonglue=e.typeMap.gonglve,e.typeGroupMap.gonglue=e.typeGroupMap.gonglve,r}return M(e,t),e.prototype.tagName=function(){return"notice"},e.prototype.tagAliases=function(){return["feedback","essence"]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,r,o,n){void 0===n&&(n=!1);var i=e.typeMap[r];return i?'<div data-tag="notice" data-notice-type="'+r+'" class="ambox"><table class="'+i.boxClass+'"><tbody><tr><td class="ambox-image"><img src="'+i.imgSrc+'"/></td><td class="ambox-notice"><span class="notice-bubble"><span class="notice-bubble-line"></span><i><b class="notice-speech">'+i.speech+'</b></i></span><br><span class="notice-text">'+i.notification+"</span></td></tr></tbody></table></div>":"[notice="+r+"]"},e.prototype.decodeFromHtml=function(t,r,o,n){var i=t.getAttribute("data-notice-type");return i&&e.typeMap[i]?"["+e.typeGroupMap[i]+"="+i+"]":""},e.typeMap={jutou:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/%E5%8F%AF%E9%9C%B2%E5%B8%8C%E5%B0%94_%E7%9C%8B%E4%B9%A6.png",boxClass:"ambox ambox-blue",speech:"博士，这几页我先帮你存着。",notification:"<b>本帖内容含剧透成分。</b>想要享受游戏探索/解谜乐趣的玩家请自行离开。"},rmt:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/20720aaac96bb824570ec92f651ffd7be84370b8.png",boxClass:"ambox ambox-blue",speech:"小心钱包（这句话是阿米娅说的）",notification:"<b>该帖子涉及现实货币交易。</b>请注意资产安全。"},predict:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/9156ab90139c76dbeb7420384c2ac691ab86097f.png",boxClass:"ambox ambox-blue",speech:"罗德岛的档案里没有诶...",notification:"<b>该帖子含推测内容。</b>请以官方消息为准，小心甄别。"},warn:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/20210626213733.png",boxClass:"ambox ambox-red",speech:"警告！博士你呀快被吊到舰桥上了哦...",notification:"<b>您的帖子已游走在违规边缘，请及时更改！</b>"},rec:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/4945b698209e2e73bc129a9026fc625a78ad8370.png",boxClass:"ambox ambox-violet",speech:"这个问题工程部已经知道啦！正在加班加点抢修！",notification:"<b>所反馈内容已记录</b>，请耐心等待。"},succ:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/02b4b87d4412f4a93d2f6d56f6479fd59918a7cc.png",boxClass:"ambox ambox-green",speech:"哼哼！这个问题已经解决啦！快称赞一下伟大的可露希尔！",notification:"<b>所反馈内容已解决</b>，请关注论坛公告。"},fail:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/32c0c66fb419b9ff5c8efb5ef967257627f8037d.png",boxClass:"ambox ambox-orange",speech:"啊呀...这个问题有点难...什么？伟大的可露希尔怎么可能不会！",notification:"所反馈内容由于各种原因<i>暂时</i>无法解决，请谅解。"},post:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"这篇文章写的好棒！要不偷偷的印出来卖钱吧？",notification:"您的帖子已达到加精标准，感谢您的付出！"},paint:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"这也太好看啦！能让我拿去观摩一下吗？嗯？不会偷偷卖钱啦！",notification:"您的帖子已达到加精标准，感谢您的付出！"},rpg:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"哦！这展开真是出乎意料啊！拍个电影吧！赚钱了我七你三！",notification:"您的帖子已达到加精标准，感谢您的付出！"},kaoju:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"什...什么！？这都能让你找出来的！挺不错的嘛！",notification:"您的帖子已达到加精标准，感谢您的付出！"},gonglve:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"居然比我可露希尔还要厉害...真有你的呀！",notification:"您的帖子已达到加精标准，感谢您的付出！"}},e.typeGroupMap={jutou:"notice",rmt:"notice",predict:"notice",warn:"notice",rec:"feedback",succ:"feedback",fail:"feedback",post:"essence",paint:"essence",rpg:"essence",kaoju:"essence",gonglve:"essence"},e}(r),F=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),I=function(t){function e(){var r=t.call(this)||this;return e.typeMap.video=e.typeMap.bvideo,e.typeGroupMap.video=e.typeGroupMap.bvideo,r}return F(e,t),e.prototype.tagName=function(){return"video"},e.prototype.tagAliases=function(){return["bvideo"]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,r,o,n){if(void 0===n&&(n=!1),r&&0===r.indexOf("bv=")&&(r=r.substring(3)),!r)return"";var i=e.typeMap[t];if(!i)return"["+t+"="+r+"]";var a=e.typeGroupMap[t];return n?'<div data-tag="video" class="video" data-video-type="'+a.type+'" data-video-value="'+r+'">视频来源：<span class="video-type">'+a.name+'</span><br/>视频ID：<span class="video-value">'+r+"</span></div>":'<div data-tag="video">'+i.replace(/__VIDEO_VALUE__/g,r)+"</div>"},e.prototype.decodeFromHtml=function(t,r,o,n){var i=t.getAttribute("data-video-type"),a=t.getAttribute("data-video-value");return i&&a&&e.typeMap[i]?"["+e.typeGroupMap[i].type+"="+a+"]":""},e.typeMap={bvideo:'<iframe src="//player.bilibili.com/player.html?bvid=__VIDEO_VALUE__&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="95%" height="600"></iframe>'},e.typeGroupMap={bvideo:{name:"B站",type:"bvideo"}},e}(r),z=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),X=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return z(e,t),e.prototype.tagName=function(){return"smile"},e.prototype.match=function(t){return!!t.match(/^s(-\d+)+$/g)},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),"["+t+"]"},e.prototype.decodeFromHtml=function(t,e,r,o){return!1},e}(r),Y=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),R=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Y(e,t),e.prototype.tagName=function(){return"bgcolor"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?(e=this.checkColor(e))?'<span data-color="'+e+'" data-tag="bgcolor" style="background-color: '+e+'">'+r+"</span>":r:""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getAttribute("data-color");return o.bgcolor===n?e(t.childNodes,r,o):(o.bgcolor=n,"[bgcolor="+n+"]"+e(t.childNodes,r,o)+"[/bgcolor]")},e}(r),U=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),V=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return U(e,t),e.prototype.tagName=function(){return"align"},e.prototype.tagAliases=function(){return["left","right","center"]},e.prototype.encodeToHtml=function(t,e,r,o){if(void 0===o&&(o=!1),!r)return"";var n;if("align"===t){if("left"!==e&&"right"!==e&&"center"!==e)return!1;n=e}else n=t;return'<div style="text-align: '+n+'" data-tag="align">'+r+"</div>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.style.textAlign;return"["+n+"]"+e(t.childNodes,r,o)+"[/"+n+"]"},e}(r),q=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),G=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return q(e,t),e.prototype.tagName=function(){return"table"},e.prototype.tagAliases=function(){return["tr","td"]},e.prototype.allowParents=function(t){switch(t){case"tr":return["table"];case"td":return["tr"];default:return[]}},e.prototype.encodeToHtml=function(t,e,r,o){void 0===o&&(o=!1);var n,i,a,c,s,u,l,p=this.splitArgs(e);switch(t){case"td":n=p.length>0?this.checkSize(p[0]):"",i=p.length>1?this.checkSize(p[1]):"",a=p.length>2?this.checkColor(p[2]):"",c=p.length>3?this.checkAlign(p[3]):"",s=p.length>4?this.checkAlign(p[4]):"";var f=p.length>5?parseInt(p[5])>1?parseInt(p[5]):0:"",d=p.length>6?parseInt(p[6])>1?parseInt(p[6]):0:"";return"<td"+this.combineAttributes({rowspan:f,colspan:d,style:this.combineStyles({width:n,height:i,"text-align":c,"vertical-align":s,"background-color":a})})+">"+r+"</td>";case"tr":return i=p.length>0?this.checkSize(p[0]):"",a=p.length>1?this.checkColor(p[1]):"","<tr"+this.combineAttributes({style:this.combineStyles({height:i,"background-color":a})})+">"+r+"</tr>";case"table":return n=p.length>0?this.checkSize(p[0]):"",i=p.length>1?this.checkSize(p[1]):"",a=p.length>2?this.checkColor(p[2]):"",c=p.length>3?this.checkAlign(p[3]):"",u=p.length>4?parseInt(p[4]):"",l=p.length>5?parseInt(p[5]):"","<table"+this.combineAttributes({align:c,cellspacing:u,cellpadding:l,style:this.combineStyles({width:n,height:i,"background-color":a})})+">"+r+"</table>";default:return!1}},e.prototype.decodeFromHtml=function(t,e,r,o){var n,i,a,c,s,u,l,p=t;switch(t.tagName.toLowerCase()){case"table":return n=this.checkSize(p.style.width),i=this.checkSize(p.style.height),a=this.checkColor(p.style.backgroundColor),c=this.checkAlign(p.align),u=parseInt(p.cellspacing),l=parseInt(p.cellpadding),"[table"+this.combineArgs([n,i,a,c,u,l])+"]"+e(t.childNodes,r,o)+"[/table]";case"tr":return i=this.checkSize(p.style.height),a=this.checkColor(p.style.backgroundColor),"[tr"+this.combineArgs([i,a])+"]"+e(t.childNodes,r,o)+"[/tr]";case"td":n=this.checkSize(p.style.width),i=this.checkSize(p.style.height),a=this.checkColor(p.style.backgroundColor),c=this.checkAlign(p.style.textAlign),s=this.checkAlign(p.style.verticalAlign);var f=parseInt(p.rowSpan)>1?parseInt(p.rowSpan):0,d=parseInt(p.colSpan)>1?parseInt(p.colSpan):0;return"[td"+this.combineArgs([n,i,a,c,s,f,d])+"]"+e(t.childNodes,r,o)+"[/td]";default:return!1}},e}(r),$=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),W=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return $(e,t),e.prototype.tagName=function(){return"code"},e.prototype.useCustomParser=function(t){return!0},e.prototype.parseStackToHtml=function(t,e,o,n,i,a){var c=r.filterXSS(e.substring(o,n));return a?'<div data-tag="code" class="code"><span>代码文本：</span><pre class="code-content">'+c+"</pre></div>":'<pre class="code">'+c+"</pre>"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),!1},e.prototype.decodeFromHtml=function(t,e,o,n){var i=t.getElementsByClassName("code-content")[0].innerHTML;return i=i.replace(/<br\/?>/gi,"\n"),"[code]"+(i=r.unfilteredXSS(i))+"[/code]"},e}(r),J=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),Z=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return J(e,t),e.prototype.tagName=function(){return"audio"},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,r,o,n){if(void 0===n&&(n=!1),!r)return"";var i=this.splitArgs(r),a=i.length>0?i[0]:"",c=i.length>1?i[1]:"";if(!a||!c||!e.typeMap[a])return"["+t+"="+r+"]";var s,u=i.length>2?i[2]:"default",l=e.typeMap[a];return n?("default"!==u&&l.types[u]||(u=l.types.default),s=l.types[u],'<div data-tag="audio" class="audio" data-audio-type="'+a+'" data-audio-value="'+c+'" data-audio-subtype="'+u+'">音乐来源：<span class="audio-type">'+l.name+'</span><br/>音乐类型：<span class="audio-subtype">'+s+'</span><br/>音乐ID：<span class="audio-value">'+c+"</span></div>"):("default"!==u&&l.templates[u]||(u=l.templates.default),'<div data-tag="audio">'+l.templates[u].replace(/__AUDIO_VALUE__/g,r)+"</div>")},e.prototype.decodeFromHtml=function(t,r,o,n){var i=t.getAttribute("data-audio-type"),a=t.getAttribute("data-audio-value");if(!i||!a||!e.typeMap[i])return"";var c=t.getAttribute("data-audio-subtype")||"default",s=e.typeMap[i];return"default"!==c&&c!==s.types.default&&s.types[c]||(c=""),c&&(c=";"+c),"[audio="+i+";"+a+c+"]"},e.typeMap={netease:{name:"网易云音乐",types:{default:"song",song:"单曲",playlist:"歌单",album:"专辑",radio:"电台",program:"电台单曲"},templates:{default:"song",song:'<iframe src="//music.163.com/outchain/player?type=2&id=__AUDIO_VALUE__&auto=0&height=66" frameborder="no" border="0" marginwidth="0" marginheight="0" width="95%" height="86"></iframe>',playlist:'<iframe src="//music.163.com/outchain/player?type=0&id=__AUDIO_VALUE__&auto=0&height=66" frameborder="no" border="0" marginwidth="0" marginheight="0" width="95%" height="300"></iframe>',album:'<iframe src="//music.163.com/outchain/player?type=1&id=__AUDIO_VALUE__&auto=0&height=66" frameborder="no" border="0" marginwidth="0" marginheight="0" width="95%" height="300"></iframe>',radio:'<iframe src="//music.163.com/outchain/player?type=4&id=__AUDIO_VALUE__&auto=0&height=66" frameborder="no" border="0" marginwidth="0" marginheight="0" width="95%" height="300"></iframe>',program:'<iframe src="//music.163.com/outchain/player?type=2&id=__AUDIO_VALUE__&auto=0&height=66" frameborder="no" border="0" marginwidth="0" marginheight="0" width="95%" height="86"></iframe>'}}},e}(r),K=new i;K.registerTagHandler(new c),K.registerTagHandler(new u),K.registerTagHandler(new w),K.registerTagHandler(new T),K.registerTagHandler(new p),K.registerTagHandler(new d),K.registerTagHandler(new h),K.registerTagHandler(new m),K.registerTagHandler(new _),K.registerTagHandler(new E),K.registerTagHandler(new C),K.registerTagHandler(new x),K.registerTagHandler(new k),K.registerTagHandler(new j),K.registerTagHandler(new L),K.registerTagHandler(new D),K.registerTagHandler(new I),K.registerTagHandler(new Z),K.registerTagHandler(new X),K.registerTagHandler(new R),K.registerTagHandler(new V),K.registerTagHandler(new G),K.registerTagHandler(new W);var Q={};t.g.BBCODE={get defaultStyle(){return Q},clearDefaultStyle:function(){for(var t in Q)delete Q[t];return Q},newParser:function(){return new i},defaultParser:K,bbcode2html:function(t,e){return void 0===e&&(e=!1),console.log("bbcode2html"),K.bbcode2html(t,e)},html2bbcode:function(t,e){return void 0===e&&(e=!1),console.log("html2bbcode"),K.html2bbcode(t,e)}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,